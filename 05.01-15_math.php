<?php
require('start_set.php'); // выводить все ошибки и кодировка UTF-8
require('TasksName_2.php'); // функции для вывода имени задания
require('accretion.php'); // падежное приращение для числительных


/* задача 05.01
Даны переменные $a=10 и $b=3. Найдите остаток от деления $a на $b. */
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$a=10;
$b=3;
echo "остаток от деления $a на $b -- ".($a % $b);

/* задача 05.02
Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. Если это так - выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$a = mt_rand(0,100);
$b = mt_rand(1,100);
if (($a % $b) == 0) {
  echo "$a делится на $b без остатка";
} else {
  echo "$a делится на $b с остатком ".($a % $b);
}
/* задача 05.03
Для решения задач данного блока вам понадобятся следующие функции: sqrt, pow.
Возведите 2 в 10 степень. Результат запишите в переменную $st.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$st = 2**10;
echo $st;

/* задача 05.04
Найдите квадратный корень из 245.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
echo 'корень квадратный из 245 = '.sqrt(245);

/* задача 05.05
Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach. Показать решение.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$arr = array(4, 2, 5, 19, 13, 0, 10);
$rezult = 0;
foreach ($arr as $val) {
  $rezult += $val**2;
}
echo 'корень квадратный из суммы квадратов элементов заданного массива '. sqrt($rezult);
/* задача 05.06
Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых. Показать решение.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$val = sqrt(379);
echo 'корень квадратный из 379 округленный до сотых '. round($val, 2);
echo '<br>корень квадратный из 379 округленный до десятых '. round($val, 1);
echo '<br>корень квадратный из 379 округленный до целых '. round($val, 0);

/* задача 05.07
Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$val = sqrt(587);
$arr = array(
  'floor' => round($val, 0, PHP_ROUND_HALF_UP),
  'ceil' => round($val, 0, PHP_ROUND_HALF_DOWN));
echo $val.'<br>';
print_r ($arr);

/* задача 05.08
Для решения задач данного блока вам понадобятся следующие функции: min, max.
Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$arr = array(4, -2, 5, 19, -130, 0, 10);
echo 'максимальное значение массива '.min($arr);
echo '<br>минимальное значение массива '.max($arr);

/* задача 05.09
Для решения задач данного блока вам понадобятся следующие функции: mt_rand.
Выведите на экран случайное число от 1 до 100. Показать решение.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
echo mt_rand(1,100);

/* задача 05.10
Заполните массив 10-ю случайными числами. Подсказка: нужно воспользоваться циклами for или while. .
*/
$arr = NULL;
echo TaskName(TaskNumber(__FILE__)); //номер задачи
for ($key=0; $key < 10 ; $key++) {
  $arr[] = mt_rand();
}
print_r($arr);

/* задача 05.11
Для решения задач данного блока вам понадобятся следующие функции: abs.
Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b. Показать решение.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$a = mt_rand(0,100);
$b = mt_rand(0,100);
echo "модуль разности $a и $b = ".abs($a-$b);

/* задача 05.12
Дан массив в числами, к примеру [1, 2, -1, -2, 3, -3]. Создайте из него новый массив так, чтобы отрицательные числа стали положительными, то есть у нас должен получиться такой массив: [1, 2, 1, 2, 3, 3]. */
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$arr = array(1, 2, -1, -2, 3, -3);
foreach ($arr as $key => $val) {
  $arr[$key] = abs($val);
}
print_r($arr);

/* задача 05.13
Дано число, например 30. У этого числа есть делители - числа, на которое оно делится без остатка. Делители числа 30 - это 1, 2, 3, 5, 6, 10, 15, 30. Задача: сделайте массив делителей нашего числа. Число может быть любым, не обязательно, 30. Показать решение.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$num = mt_rand(1,100);
for ($div=1; $div <= $num; $div++) {
  if (($num % $div) == 0) {
    $divArr[] = $div;
  }
}
echo "делители числа $num это ";
foreach ($divArr as $key => $val) {
  echo $val.', ';
}

/* задача 05.14
Дан массив [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Узнайте, сколько первых элементов массива нужно сложить, чтобы сумма получилась больше 10. Показать решение.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
$arr = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
$counter = 0;
foreach ($arr as $key => $value) {
  $counter += $value;
  if ($counter > 10) {
    echo 'сложено '.($key+1).' первых элементов массива чтобы сумма получилась больше 10';
    break;
  }
}

/* задача 05.15
Даны ящики. Длина каждого ящика 1.5 метра. Узнайте, сколько ящиков может поместиться вдоль стены длиной 20 метров. Ответом должно быть целое число.
*/
echo TaskName(TaskNumber(__FILE__)); //номер задачи
echo 'вдоль стены длиной 20 метров поместиться '.round(20/1.5, 0). ' полутораметровых ящиков';


?>
